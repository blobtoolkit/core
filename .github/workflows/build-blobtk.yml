name: release-blobtk

on:
  push:
    branches:
      - bugfix/macos-build
    tags:
      - "*"

env:
  VERSION: 0.5.7

jobs:
  macos-binary:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-apple-darwin
      - name: Build
        working-directory: ./rust
        run: |
          cargo build --target=x86_64-apple-darwin --release
      - name: Rename binary
        run: |
          mv ./rust/target/x86_64-apple-darwin/release/blobtk ./rust/target/x86_64-apple-darwin/release/blobtk-macos-x64
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: rust/target/x86_64-apple-darwin/release/blobtk-macos-*

  macos-binary-arm64:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin
      - name: Build
        working-directory: ./rust
        run: |
          cargo build --target=aarch64-apple-darwin --release
      - name: Rename binary
        run: |
          mv ./rust/target/aarch64-apple-darwin/release/blobtk ./rust/target/aarch64-apple-darwin/release/blobtk-macos-arm64
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: rust/target/aarch64-apple-darwin/release/blobtk-macos-*

  linux-binary:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install static libraries for C
        run: sudo apt-get install -y libc6-dev
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu
      - name: Build
        working-directory: ./rust
        run: RUSTFLAGS="-C target-feature=+crt-static -C relocation-model=static" cargo build --target x86_64-unknown-linux-gnu --release
      - name: Rename binary
        run: |
          mv ./rust/target/x86_64-unknown-linux-gnu/release/blobtk ./rust/target/release/blobtk-linux
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: ./rust/target/release/blobtk-*

  linux-wheels:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - "3.12"
        target:
          - x86_64 # , x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          before-script-linux: yum install -y perl-IPC-Cmd
          args: --release --out dist -i python${{ matrix.python }} --target x86_64-unknown-linux-gnu -m rust/Cargo.toml
          sccache: "true"
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos-wheels:
    runs-on: macos-latest
    strategy:
      matrix:
        python:
          - "3.12"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python}}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist -i python${{matrix.python}} --target x86_64-apple-darwin -m rust/Cargo.toml
          sccache: "true"
      - name: Build universal wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist -i python${{matrix.python}} --universal2 -m rust/Cargo.toml
          sccache: "true"
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  build-and-push-docker-develop:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: genomehubs/blobtk
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./rust
          push: true
          tags: genomehubs/blobtk:develop
          labels: ${{ steps.meta.outputs.labels }}
